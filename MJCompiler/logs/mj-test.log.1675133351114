INFO  03:10:31,432 - Compiling source file: C:\PP1 domaci\workspace\MJCompiler\test\program.mj
INFO  03:10:31,435 - #2 program
INFO  03:10:31,435 - #15 p
INFO  03:10:31,435 - #24 const
INFO  03:10:31,436 - #15 int
INFO  03:10:31,436 - #15 size
INFO  03:10:31,436 - #12 =
INFO  03:10:31,436 - #14 10
INFO  03:10:31,436 - #5 ;
INFO  03:10:31,436 - #25 class
INFO  03:10:31,436 - #15 Table
INFO  03:10:31,436 - #3 {
INFO  03:10:31,436 - #15 int
INFO  03:10:31,436 - #15 pos
INFO  03:10:31,436 - #31 [
INFO  03:10:31,436 - #30 ]
INFO  03:10:31,436 - #8 ,
INFO  03:10:31,437 - #15 neg
INFO  03:10:31,437 - #31 [
INFO  03:10:31,437 - #30 ]
INFO  03:10:31,437 - #8 ,
INFO  03:10:31,437 - #15 factor
INFO  03:10:31,437 - #5 ;
INFO  03:10:31,438 - #3 {
INFO  03:10:31,438 - #15 Table
INFO  03:10:31,438 - #6 (
INFO  03:10:31,438 - #15 int
INFO  03:10:31,438 - #15 factor
INFO  03:10:31,438 - #7 )
INFO  03:10:31,438 - #3 {
INFO  03:10:31,438 - #15 this
INFO  03:10:31,438 - #32 .
INFO  03:10:31,438 - #15 factor
INFO  03:10:31,439 - #12 =
INFO  03:10:31,439 - #15 factor
INFO  03:10:31,439 - #5 ;
INFO  03:10:31,439 - #4 }
INFO  03:10:31,439 - #13 void
INFO  03:10:31,439 - #15 putp
INFO  03:10:31,439 - #6 (
INFO  03:10:31,439 - #15 int
INFO  03:10:31,439 - #15 a
INFO  03:10:31,439 - #8 ,
INFO  03:10:31,439 - #15 int
INFO  03:10:31,439 - #15 idx
INFO  03:10:31,439 - #7 )
INFO  03:10:31,439 - #3 {
INFO  03:10:31,440 - #15 this
INFO  03:10:31,440 - #32 .
INFO  03:10:31,440 - #15 pos
INFO  03:10:31,440 - #31 [
INFO  03:10:31,440 - #15 idx
INFO  03:10:31,440 - #30 ]
INFO  03:10:31,440 - #12 =
INFO  03:10:31,440 - #15 a
INFO  03:10:31,440 - #5 ;
INFO  03:10:31,441 - #4 }
INFO  03:10:31,441 - #13 void
INFO  03:10:31,441 - #15 putn
INFO  03:10:31,441 - #6 (
INFO  03:10:31,441 - #15 int
INFO  03:10:31,441 - #15 a
INFO  03:10:31,441 - #8 ,
INFO  03:10:31,441 - #15 int
INFO  03:10:31,441 - #15 idx
INFO  03:10:31,441 - #7 )
INFO  03:10:31,441 - #3 {
INFO  03:10:31,441 - #15 this
INFO  03:10:31,441 - #32 .
INFO  03:10:31,441 - #15 neg
INFO  03:10:31,441 - #31 [
INFO  03:10:31,441 - #15 idx
INFO  03:10:31,441 - #30 ]
INFO  03:10:31,442 - #12 =
INFO  03:10:31,442 - #15 a
INFO  03:10:31,442 - #5 ;
INFO  03:10:31,442 - #4 }
INFO  03:10:31,442 - #15 int
INFO  03:10:31,442 - #15 getp
INFO  03:10:31,442 - #6 (
INFO  03:10:31,442 - #15 int
INFO  03:10:31,442 - #15 idx
INFO  03:10:31,442 - #7 )
INFO  03:10:31,442 - #3 {
INFO  03:10:31,442 - #10 return
INFO  03:10:31,442 - #15 pos
INFO  03:10:31,442 - #31 [
INFO  03:10:31,442 - #15 idx
INFO  03:10:31,442 - #30 ]
INFO  03:10:31,442 - #5 ;
INFO  03:10:31,442 - #4 }
INFO  03:10:31,442 - #15 int
INFO  03:10:31,442 - #15 getn
INFO  03:10:31,442 - #6 (
INFO  03:10:31,442 - #15 int
INFO  03:10:31,442 - #15 idx
INFO  03:10:31,442 - #7 )
INFO  03:10:31,442 - #3 {
INFO  03:10:31,442 - #10 return
INFO  03:10:31,443 - #15 neg
INFO  03:10:31,443 - #31 [
INFO  03:10:31,443 - #15 idx
INFO  03:10:31,443 - #30 ]
INFO  03:10:31,443 - #5 ;
INFO  03:10:31,443 - #4 }
INFO  03:10:31,443 - #4 }
INFO  03:10:31,443 - #4 }
INFO  03:10:31,443 - #15 Table
INFO  03:10:31,443 - #15 val
INFO  03:10:31,443 - #5 ;
INFO  03:10:31,443 - #15 Int
INFO  03:10:31,443 - #15 rows
INFO  03:10:31,443 - #8 ,
INFO  03:10:31,443 - #15 columns
INFO  03:10:31,443 - #5 ;
INFO  03:10:31,443 - #3 {
INFO  03:10:31,443 - #13 void
INFO  03:10:31,443 - #15 f
INFO  03:10:31,444 - #6 (
INFO  03:10:31,444 - #15 char
INFO  03:10:31,444 - #15 ch
INFO  03:10:31,444 - #8 ,
INFO  03:10:31,444 - #15 int
INFO  03:10:31,444 - #15 a
INFO  03:10:31,444 - #8 ,
INFO  03:10:31,444 - #15 int
INFO  03:10:31,444 - #15 arg
INFO  03:10:31,444 - #7 )
INFO  03:10:31,444 - #15 int
INFO  03:10:31,444 - #15 x
INFO  03:10:31,444 - #5 ;
INFO  03:10:31,444 - #3 {
INFO  03:10:31,444 - #15 x
INFO  03:10:31,444 - #12 =
INFO  03:10:31,444 - #15 arg
INFO  03:10:31,444 - #5 ;
INFO  03:10:31,444 - #4 }
INFO  03:10:31,444 - #13 void
INFO  03:10:31,445 - #15 main
INFO  03:10:31,445 - #6 (
INFO  03:10:31,445 - #7 )
INFO  03:10:31,445 - #15 int
INFO  03:10:31,445 - #15 x
INFO  03:10:31,445 - #8 ,
INFO  03:10:31,445 - #15 i
INFO  03:10:31,445 - #5 ;
INFO  03:10:31,445 - #15 char
INFO  03:10:31,445 - #15 c
INFO  03:10:31,445 - #8 ,
INFO  03:10:31,445 - #15 int
INFO  03:10:31,445 - #15 arr
INFO  03:10:31,445 - #31 [
INFO  03:10:31,445 - #30 ]
INFO  03:10:31,445 - #5 ;
INFO  03:10:31,445 - #3 {
INFO  03:10:31,445 - #15 val
INFO  03:10:31,445 - #12 =
INFO  03:10:31,445 - #19 new
INFO  03:10:31,445 - #15 Table
INFO  03:10:31,446 - #6 (
INFO  03:10:31,446 - #14 2
INFO  03:10:31,446 - #7 )
INFO  03:10:31,446 - #5 ;
INFO  03:10:31,446 - #15 arr
INFO  03:10:31,446 - #12 =
INFO  03:10:31,447 - #19 new
INFO  03:10:31,447 - #15 int
INFO  03:10:31,447 - #31 [
INFO  03:10:31,447 - #14 3
INFO  03:10:31,447 - #30 ]
INFO  03:10:31,448 - #5 ;
INFO  03:10:31,448 - #15 i
INFO  03:10:31,448 - #12 =
INFO  03:10:31,448 - #14 0
INFO  03:10:31,448 - #5 ;
INFO  03:10:31,448 - #20 while
INFO  03:10:31,448 - #6 (
INFO  03:10:31,448 - #15 i
INFO  03:10:31,448 - #39 <
INFO  03:10:31,448 - #14 3
INFO  03:10:31,448 - #7 )
INFO  03:10:31,448 - #3 {
INFO  03:10:31,448 - #15 arr
INFO  03:10:31,448 - #31 [
INFO  03:10:31,448 - #15 i
INFO  03:10:31,448 - #30 ]
INFO  03:10:31,448 - #12 =
INFO  03:10:31,448 - #15 i
INFO  03:10:31,448 - #5 ;
INFO  03:10:31,448 - #15 i
INFO  03:10:31,448 - #34 ++
INFO  03:10:31,448 - #5 ;
INFO  03:10:31,448 - #4 }
INFO  03:10:31,448 - #15 arr
INFO  03:10:31,449 - #32 .
INFO  03:10:31,449 - #23 foreach
INFO  03:10:31,449 - #6 (
INFO  03:10:31,449 - #15 x
INFO  03:10:31,449 - #29 =>
INFO  03:10:31,449 - #9 print
INFO  03:10:31,449 - #6 (
INFO  03:10:31,449 - #15 x
INFO  03:10:31,449 - #7 )
INFO  03:10:31,449 - #5 ;
INFO  03:10:31,449 - #7 )
INFO  03:10:31,449 - #5 ;
INFO  03:10:31,449 - #15 val
INFO  03:10:31,449 - #32 .
INFO  03:10:31,449 - #15 pos
INFO  03:10:31,449 - #12 =
INFO  03:10:31,449 - #19 new
INFO  03:10:31,449 - #15 int
INFO  03:10:31,449 - #31 [
INFO  03:10:31,449 - #15 size
INFO  03:10:31,449 - #30 ]
INFO  03:10:31,449 - #5 ;
INFO  03:10:31,449 - #15 val
INFO  03:10:31,449 - #32 .
INFO  03:10:31,449 - #15 neg
INFO  03:10:31,449 - #12 =
INFO  03:10:31,449 - #19 new
INFO  03:10:31,449 - #15 int
INFO  03:10:31,449 - #31 [
INFO  03:10:31,449 - #15 size
INFO  03:10:31,449 - #30 ]
INFO  03:10:31,449 - #5 ;
INFO  03:10:31,449 - #18 read
INFO  03:10:31,449 - #6 (
INFO  03:10:31,450 - #15 x
INFO  03:10:31,450 - #7 )
INFO  03:10:31,450 - #5 ;
INFO  03:10:31,450 - #31 [
INFO  03:10:31,450 - #15 i
INFO  03:10:31,450 - #8 ,
INFO  03:10:31,450 - #8 ,
INFO  03:10:31,450 - #15 x
INFO  03:10:31,450 - #30 ]
INFO  03:10:31,450 - #12 =
INFO  03:10:31,450 - #15 arr
INFO  03:10:31,450 - #5 ;
INFO  03:10:31,450 - #20 while
INFO  03:10:31,450 - #6 (
INFO  03:10:31,450 - #15 i
INFO  03:10:31,450 - #39 <
INFO  03:10:31,450 - #15 size
INFO  03:10:31,450 - #7 )
INFO  03:10:31,451 - #3 {
INFO  03:10:31,451 - #15 val
INFO  03:10:31,451 - #32 .
INFO  03:10:31,451 - #15 putp
INFO  03:10:31,451 - #6 (
INFO  03:10:31,451 - #14 0
INFO  03:10:31,451 - #8 ,
INFO  03:10:31,451 - #15 i
INFO  03:10:31,451 - #7 )
INFO  03:10:31,451 - #5 ;
INFO  03:10:31,451 - #15 val
INFO  03:10:31,451 - #32 .
INFO  03:10:31,451 - #15 putn
INFO  03:10:31,451 - #6 (
INFO  03:10:31,451 - #14 0
INFO  03:10:31,451 - #8 ,
INFO  03:10:31,451 - #15 i
INFO  03:10:31,451 - #7 )
INFO  03:10:31,451 - #5 ;
INFO  03:10:31,451 - #15 i
INFO  03:10:31,451 - #34 ++
INFO  03:10:31,451 - #5 ;
INFO  03:10:31,451 - #4 }
INFO  03:10:31,451 - #15 f
INFO  03:10:31,451 - #6 (
INFO  03:10:31,451 - #15 c
INFO  03:10:31,451 - #8 ,
INFO  03:10:31,451 - #15 x
INFO  03:10:31,451 - #8 ,
INFO  03:10:31,451 - #15 i
INFO  03:10:31,451 - #7 )
INFO  03:10:31,451 - #5 ;
INFO  03:10:31,451 - #18 read
INFO  03:10:31,451 - #6 (
INFO  03:10:31,451 - #15 rows
INFO  03:10:31,451 - #7 )
INFO  03:10:31,451 - #5 ;
INFO  03:10:31,451 - #15 x
INFO  03:10:31,451 - #12 =
INFO  03:10:31,451 - #15 rows
INFO  03:10:31,451 - #5 ;
INFO  03:10:31,451 - #20 while
INFO  03:10:31,451 - #6 (
INFO  03:10:31,451 - #27 true
INFO  03:10:31,452 - #7 )
INFO  03:10:31,452 - #3 {
INFO  03:10:31,452 - #16 if
INFO  03:10:31,452 - #6 (
INFO  03:10:31,452 - #15 x
INFO  03:10:31,452 - #38 <=
INFO  03:10:31,452 - #14 0
INFO  03:10:31,452 - #7 )
INFO  03:10:31,452 - #26 break
INFO  03:10:31,452 - #5 ;
INFO  03:10:31,452 - #16 if
INFO  03:10:31,452 - #6 (
INFO  03:10:31,452 - #14 0
INFO  03:10:31,452 - #38 <=
INFO  03:10:31,452 - #15 x
INFO  03:10:31,452 - #37 &&
INFO  03:10:31,452 - #15 x
INFO  03:10:31,452 - #39 <
INFO  03:10:31,452 - #15 size
INFO  03:10:31,452 - #7 )
INFO  03:10:31,452 - #3 {
INFO  03:10:31,452 - #15 val
INFO  03:10:31,452 - #32 .
INFO  03:10:31,452 - #15 putp
INFO  03:10:31,452 - #6 (
INFO  03:10:31,452 - #15 val
INFO  03:10:31,452 - #32 .
INFO  03:10:31,452 - #15 getp
INFO  03:10:31,452 - #6 (
INFO  03:10:31,452 - #15 x
INFO  03:10:31,452 - #7 )
INFO  03:10:31,452 - #11 +
INFO  03:10:31,452 - #14 1
INFO  03:10:31,452 - #7 )
INFO  03:10:31,452 - #5 ;
INFO  03:10:31,453 - #4 }
INFO  03:10:31,453 - #17 else
INFO  03:10:31,453 - #16 if
INFO  03:10:31,453 - #6 (
INFO  03:10:31,453 - #47 -
INFO  03:10:31,453 - #15 size
INFO  03:10:31,453 - #39 <
INFO  03:10:31,453 - #15 x
INFO  03:10:31,453 - #37 &&
INFO  03:10:31,453 - #15 x
INFO  03:10:31,453 - #39 <
INFO  03:10:31,453 - #14 0
INFO  03:10:31,453 - #7 )
INFO  03:10:31,453 - #3 {
INFO  03:10:31,453 - #15 val
INFO  03:10:31,453 - #32 .
INFO  03:10:31,453 - #15 putn
INFO  03:10:31,453 - #6 (
INFO  03:10:31,453 - #15 val
INFO  03:10:31,453 - #32 .
INFO  03:10:31,453 - #15 getn
INFO  03:10:31,453 - #6 (
INFO  03:10:31,453 - #47 -
INFO  03:10:31,453 - #15 x
INFO  03:10:31,453 - #7 )
INFO  03:10:31,453 - #11 +
INFO  03:10:31,453 - #14 1
INFO  03:10:31,453 - #5 ;
INFO  03:10:31,453 - #4 }
INFO  03:10:31,453 - #18 read
INFO  03:10:31,453 - #6 (
INFO  03:10:31,453 - #15 x
INFO  03:10:31,453 - #7 )
INFO  03:10:31,453 - #5 ;
INFO  03:10:31,454 - #4 }
INFO  03:10:31,454 - #4 }
INFO  03:10:31,454 - #4 }
