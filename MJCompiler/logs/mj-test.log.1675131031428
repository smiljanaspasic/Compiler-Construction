INFO  03:09:02,745 - Compiling source file: C:\PP1 domaci\workspace\MJCompiler\test\program.mj
INFO  03:09:02,748 - #2 program
INFO  03:09:02,748 - #15 p
INFO  03:09:02,748 - #24 const
INFO  03:09:02,748 - #15 int
INFO  03:09:02,749 - #15 size
INFO  03:09:02,749 - #12 =
INFO  03:09:02,749 - #14 10
INFO  03:09:02,749 - #5 ;
INFO  03:09:02,749 - #25 class
INFO  03:09:02,749 - #15 Table
INFO  03:09:02,749 - #3 {
INFO  03:09:02,749 - #15 int
INFO  03:09:02,749 - #15 pos
INFO  03:09:02,749 - #31 [
INFO  03:09:02,749 - #30 ]
INFO  03:09:02,749 - #8 ,
INFO  03:09:02,749 - #15 neg
INFO  03:09:02,749 - #31 [
INFO  03:09:02,749 - #30 ]
INFO  03:09:02,749 - #8 ,
INFO  03:09:02,750 - #15 factor
INFO  03:09:02,750 - #5 ;
INFO  03:09:02,750 - #3 {
INFO  03:09:02,750 - #15 Table
INFO  03:09:02,750 - #6 (
INFO  03:09:02,750 - #15 int
INFO  03:09:02,750 - #15 factor
INFO  03:09:02,750 - #7 )
INFO  03:09:02,750 - #3 {
INFO  03:09:02,750 - #15 this
INFO  03:09:02,750 - #32 .
INFO  03:09:02,751 - #15 factor
INFO  03:09:02,751 - #12 =
INFO  03:09:02,751 - #15 factor
INFO  03:09:02,751 - #5 ;
INFO  03:09:02,751 - #4 }
INFO  03:09:02,751 - #13 void
INFO  03:09:02,751 - #15 putp
INFO  03:09:02,751 - #6 (
INFO  03:09:02,751 - #15 int
INFO  03:09:02,751 - #15 a
INFO  03:09:02,751 - #8 ,
INFO  03:09:02,751 - #15 int
INFO  03:09:02,751 - #15 idx
INFO  03:09:02,751 - #7 )
INFO  03:09:02,751 - #3 {
INFO  03:09:02,751 - #15 this
INFO  03:09:02,751 - #32 .
INFO  03:09:02,751 - #15 pos
INFO  03:09:02,751 - #31 [
INFO  03:09:02,751 - #15 idx
INFO  03:09:02,752 - #30 ]
INFO  03:09:02,752 - #12 =
INFO  03:09:02,752 - #15 a
INFO  03:09:02,752 - #5 ;
INFO  03:09:02,752 - #4 }
INFO  03:09:02,752 - #13 void
INFO  03:09:02,752 - #15 putn
INFO  03:09:02,752 - #6 (
INFO  03:09:02,753 - #15 int
INFO  03:09:02,753 - #15 a
INFO  03:09:02,753 - #8 ,
INFO  03:09:02,753 - #15 int
INFO  03:09:02,753 - #15 idx
INFO  03:09:02,753 - #7 )
INFO  03:09:02,753 - #3 {
INFO  03:09:02,753 - #15 this
INFO  03:09:02,753 - #32 .
INFO  03:09:02,753 - #15 neg
INFO  03:09:02,753 - #31 [
INFO  03:09:02,753 - #15 idx
INFO  03:09:02,753 - #30 ]
INFO  03:09:02,753 - #12 =
INFO  03:09:02,753 - #15 a
INFO  03:09:02,753 - #5 ;
INFO  03:09:02,753 - #4 }
INFO  03:09:02,753 - #15 int
INFO  03:09:02,753 - #15 getp
INFO  03:09:02,753 - #6 (
INFO  03:09:02,753 - #15 int
INFO  03:09:02,753 - #15 idx
INFO  03:09:02,753 - #7 )
INFO  03:09:02,753 - #3 {
INFO  03:09:02,753 - #10 return
INFO  03:09:02,753 - #15 pos
INFO  03:09:02,753 - #31 [
INFO  03:09:02,753 - #15 idx
INFO  03:09:02,753 - #30 ]
INFO  03:09:02,753 - #5 ;
INFO  03:09:02,753 - #4 }
INFO  03:09:02,753 - #15 int
INFO  03:09:02,753 - #15 getn
INFO  03:09:02,753 - #6 (
INFO  03:09:02,753 - #15 int
INFO  03:09:02,754 - #15 idx
INFO  03:09:02,754 - #7 )
INFO  03:09:02,754 - #3 {
INFO  03:09:02,754 - #10 return
INFO  03:09:02,754 - #15 neg
INFO  03:09:02,754 - #31 [
INFO  03:09:02,754 - #15 idx
INFO  03:09:02,754 - #30 ]
INFO  03:09:02,754 - #5 ;
INFO  03:09:02,754 - #4 }
INFO  03:09:02,754 - #4 }
INFO  03:09:02,754 - #4 }
INFO  03:09:02,754 - #15 Table
INFO  03:09:02,755 - #15 val
INFO  03:09:02,755 - #5 ;
INFO  03:09:02,755 - #15 Int
INFO  03:09:02,755 - #15 rows
INFO  03:09:02,755 - #8 ,
INFO  03:09:02,755 - #15 columns
INFO  03:09:02,755 - #5 ;
INFO  03:09:02,755 - #3 {
INFO  03:09:02,755 - #13 void
INFO  03:09:02,755 - #15 f
INFO  03:09:02,755 - #6 (
INFO  03:09:02,755 - #15 char
INFO  03:09:02,755 - #15 ch
INFO  03:09:02,755 - #8 ,
INFO  03:09:02,755 - #15 int
INFO  03:09:02,756 - #15 a
INFO  03:09:02,756 - #8 ,
INFO  03:09:02,756 - #15 int
INFO  03:09:02,756 - #15 arg
INFO  03:09:02,756 - #7 )
INFO  03:09:02,756 - #15 int
INFO  03:09:02,756 - #15 x
INFO  03:09:02,756 - #5 ;
INFO  03:09:02,756 - #3 {
INFO  03:09:02,756 - #15 x
INFO  03:09:02,756 - #12 =
INFO  03:09:02,756 - #15 arg
INFO  03:09:02,756 - #5 ;
INFO  03:09:02,757 - #4 }
INFO  03:09:02,757 - #13 void
INFO  03:09:02,757 - #15 main
INFO  03:09:02,757 - #6 (
INFO  03:09:02,757 - #7 )
INFO  03:09:02,757 - #15 int
INFO  03:09:02,758 - #15 x
INFO  03:09:02,758 - #8 ,
INFO  03:09:02,758 - #15 i
INFO  03:09:02,758 - #5 ;
INFO  03:09:02,758 - #15 char
INFO  03:09:02,758 - #15 c
INFO  03:09:02,758 - #8 ,
INFO  03:09:02,758 - #15 int
INFO  03:09:02,758 - #15 arr
INFO  03:09:02,758 - #31 [
INFO  03:09:02,758 - #30 ]
INFO  03:09:02,758 - #5 ;
INFO  03:09:02,758 - #3 {
INFO  03:09:02,758 - #15 val
INFO  03:09:02,758 - #12 =
INFO  03:09:02,758 - #19 new
INFO  03:09:02,758 - #15 Table
INFO  03:09:02,758 - #6 (
INFO  03:09:02,758 - #14 2
INFO  03:09:02,758 - #7 )
INFO  03:09:02,758 - #5 ;
INFO  03:09:02,758 - #15 arr
INFO  03:09:02,758 - #12 =
INFO  03:09:02,759 - #19 new
INFO  03:09:02,759 - #15 int
INFO  03:09:02,759 - #31 [
INFO  03:09:02,759 - #14 3
INFO  03:09:02,760 - #30 ]
INFO  03:09:02,760 - #5 ;
INFO  03:09:02,760 - #15 i
INFO  03:09:02,760 - #12 =
INFO  03:09:02,760 - #14 0
INFO  03:09:02,760 - #5 ;
INFO  03:09:02,760 - #20 while
INFO  03:09:02,760 - #6 (
INFO  03:09:02,760 - #15 i
INFO  03:09:02,760 - #39 <
INFO  03:09:02,760 - #14 3
INFO  03:09:02,760 - #7 )
INFO  03:09:02,760 - #3 {
INFO  03:09:02,760 - #15 arr
INFO  03:09:02,760 - #31 [
INFO  03:09:02,760 - #15 i
INFO  03:09:02,760 - #30 ]
INFO  03:09:02,760 - #12 =
INFO  03:09:02,760 - #15 i
INFO  03:09:02,760 - #5 ;
INFO  03:09:02,760 - #15 i
INFO  03:09:02,760 - #34 ++
INFO  03:09:02,760 - #5 ;
INFO  03:09:02,760 - #4 }
INFO  03:09:02,760 - #15 arr
INFO  03:09:02,760 - #32 .
INFO  03:09:02,760 - #23 foreach
INFO  03:09:02,760 - #6 (
INFO  03:09:02,761 - #15 x
INFO  03:09:02,761 - #29 =>
INFO  03:09:02,761 - #9 print
INFO  03:09:02,761 - #6 (
INFO  03:09:02,761 - #15 x
INFO  03:09:02,761 - #7 )
INFO  03:09:02,761 - #5 ;
INFO  03:09:02,761 - #7 )
INFO  03:09:02,761 - #5 ;
INFO  03:09:02,761 - #15 val
INFO  03:09:02,761 - #32 .
INFO  03:09:02,761 - #15 pos
INFO  03:09:02,761 - #12 =
INFO  03:09:02,761 - #19 new
INFO  03:09:02,761 - #15 int
INFO  03:09:02,761 - #31 [
INFO  03:09:02,761 - #15 size
INFO  03:09:02,761 - #30 ]
INFO  03:09:02,761 - #5 ;
INFO  03:09:02,761 - #15 val
INFO  03:09:02,761 - #32 .
INFO  03:09:02,761 - #15 neg
INFO  03:09:02,761 - #12 =
INFO  03:09:02,761 - #19 new
INFO  03:09:02,761 - #15 int
INFO  03:09:02,761 - #31 [
INFO  03:09:02,761 - #15 size
INFO  03:09:02,761 - #30 ]
INFO  03:09:02,761 - #5 ;
INFO  03:09:02,761 - #18 read
INFO  03:09:02,761 - #6 (
INFO  03:09:02,761 - #15 x
INFO  03:09:02,761 - #7 )
INFO  03:09:02,761 - #5 ;
INFO  03:09:02,761 - #31 [
INFO  03:09:02,761 - #15 i
INFO  03:09:02,761 - #8 ,
INFO  03:09:02,761 - #8 ,
INFO  03:09:02,761 - #15 x
INFO  03:09:02,761 - #30 ]
INFO  03:09:02,761 - #12 =
INFO  03:09:02,761 - #15 arr
INFO  03:09:02,761 - #5 ;
INFO  03:09:02,762 - #20 while
INFO  03:09:02,762 - #6 (
INFO  03:09:02,762 - #15 i
INFO  03:09:02,762 - #39 <
INFO  03:09:02,762 - #15 size
INFO  03:09:02,762 - #7 )
INFO  03:09:02,762 - #3 {
INFO  03:09:02,762 - #15 val
INFO  03:09:02,762 - #32 .
INFO  03:09:02,762 - #15 putp
INFO  03:09:02,762 - #6 (
INFO  03:09:02,762 - #14 0
INFO  03:09:02,762 - #8 ,
INFO  03:09:02,762 - #15 i
INFO  03:09:02,762 - #7 )
INFO  03:09:02,762 - #5 ;
INFO  03:09:02,762 - #15 val
INFO  03:09:02,762 - #32 .
INFO  03:09:02,762 - #15 putn
INFO  03:09:02,762 - #6 (
INFO  03:09:02,762 - #14 0
INFO  03:09:02,762 - #8 ,
INFO  03:09:02,762 - #15 i
INFO  03:09:02,762 - #7 )
INFO  03:09:02,762 - #5 ;
INFO  03:09:02,763 - #15 i
INFO  03:09:02,763 - #34 ++
INFO  03:09:02,763 - #5 ;
INFO  03:09:02,763 - #4 }
INFO  03:09:02,763 - #15 f
INFO  03:09:02,763 - #6 (
INFO  03:09:02,763 - #15 c
INFO  03:09:02,763 - #8 ,
INFO  03:09:02,763 - #15 x
INFO  03:09:02,763 - #8 ,
INFO  03:09:02,763 - #15 i
INFO  03:09:02,763 - #7 )
INFO  03:09:02,763 - #5 ;
INFO  03:09:02,763 - #18 read
INFO  03:09:02,763 - #6 (
INFO  03:09:02,763 - #15 rows
INFO  03:09:02,763 - #7 )
INFO  03:09:02,763 - #5 ;
INFO  03:09:02,763 - #15 x
INFO  03:09:02,763 - #12 =
INFO  03:09:02,763 - #15 rows
INFO  03:09:02,763 - #5 ;
INFO  03:09:02,763 - #20 while
INFO  03:09:02,763 - #6 (
INFO  03:09:02,763 - #27 true
INFO  03:09:02,763 - #7 )
INFO  03:09:02,763 - #3 {
INFO  03:09:02,763 - #16 if
INFO  03:09:02,763 - #6 (
INFO  03:09:02,763 - #15 x
INFO  03:09:02,763 - #38 <=
INFO  03:09:02,763 - #14 0
INFO  03:09:02,764 - #7 )
INFO  03:09:02,764 - #26 break
INFO  03:09:02,764 - #5 ;
INFO  03:09:02,764 - #16 if
INFO  03:09:02,764 - #6 (
INFO  03:09:02,764 - #14 0
INFO  03:09:02,764 - #38 <=
INFO  03:09:02,764 - #15 x
INFO  03:09:02,764 - #37 &&
INFO  03:09:02,764 - #15 x
INFO  03:09:02,764 - #39 <
INFO  03:09:02,764 - #15 size
INFO  03:09:02,764 - #7 )
INFO  03:09:02,764 - #3 {
INFO  03:09:02,764 - #15 val
INFO  03:09:02,764 - #32 .
INFO  03:09:02,764 - #15 putp
INFO  03:09:02,764 - #6 (
INFO  03:09:02,764 - #15 val
INFO  03:09:02,764 - #32 .
INFO  03:09:02,764 - #15 getp
INFO  03:09:02,764 - #6 (
INFO  03:09:02,764 - #15 x
INFO  03:09:02,764 - #7 )
INFO  03:09:02,764 - #11 +
INFO  03:09:02,764 - #14 1
INFO  03:09:02,764 - #7 )
INFO  03:09:02,764 - #5 ;
INFO  03:09:02,764 - #4 }
INFO  03:09:02,764 - #17 else
INFO  03:09:02,764 - #16 if
INFO  03:09:02,764 - #6 (
INFO  03:09:02,765 - #15 size
INFO  03:09:02,765 - #39 <
INFO  03:09:02,765 - #15 x
INFO  03:09:02,765 - #37 &&
INFO  03:09:02,765 - #15 x
INFO  03:09:02,765 - #39 <
INFO  03:09:02,765 - #14 0
INFO  03:09:02,765 - #7 )
INFO  03:09:02,765 - #3 {
INFO  03:09:02,765 - #15 val
INFO  03:09:02,765 - #32 .
INFO  03:09:02,765 - #15 putn
INFO  03:09:02,765 - #6 (
INFO  03:09:02,765 - #15 val
INFO  03:09:02,765 - #32 .
INFO  03:09:02,765 - #15 getn
INFO  03:09:02,765 - #6 (
INFO  03:09:02,765 - #15 x
INFO  03:09:02,765 - #7 )
INFO  03:09:02,766 - #11 +
INFO  03:09:02,766 - #14 1
INFO  03:09:02,766 - #7 )
INFO  03:09:02,766 - #5 ;
INFO  03:09:02,766 - #4 }
INFO  03:09:02,766 - #18 read
INFO  03:09:02,766 - #6 (
INFO  03:09:02,766 - #15 x
INFO  03:09:02,766 - #7 )
INFO  03:09:02,766 - #5 ;
INFO  03:09:02,766 - #15 x
INFO  03:09:02,766 - #12 =
INFO  03:09:02,766 - #15 x
INFO  03:09:02,766 - #47 -
INFO  03:09:02,767 - #14 1
INFO  03:09:02,767 - #5 ;
INFO  03:09:02,767 - #4 }
INFO  03:09:02,767 - #4 }
INFO  03:09:02,767 - #4 }
