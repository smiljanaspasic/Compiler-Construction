INFO  03:07:15,582 - Compiling source file: C:\PP1 domaci\workspace\MJCompiler\test\program.mj
INFO  03:07:15,586 - #2 program
INFO  03:07:15,586 - #15 p
INFO  03:07:15,586 - #24 const
INFO  03:07:15,586 - #15 int
INFO  03:07:15,586 - #15 size
INFO  03:07:15,586 - #12 =
INFO  03:07:15,587 - #14 10
INFO  03:07:15,587 - #5 ;
INFO  03:07:15,587 - #25 class
INFO  03:07:15,587 - #15 Table
INFO  03:07:15,587 - #3 {
INFO  03:07:15,587 - #15 int
INFO  03:07:15,587 - #15 pos
INFO  03:07:15,587 - #31 [
INFO  03:07:15,587 - #30 ]
INFO  03:07:15,587 - #8 ,
INFO  03:07:15,587 - #15 neg
INFO  03:07:15,587 - #31 [
INFO  03:07:15,587 - #30 ]
INFO  03:07:15,587 - #8 ,
INFO  03:07:15,587 - #15 factor
INFO  03:07:15,587 - #5 ;
INFO  03:07:15,588 - #3 {
INFO  03:07:15,588 - #15 Table
INFO  03:07:15,588 - #6 (
INFO  03:07:15,588 - #15 int
INFO  03:07:15,588 - #15 factor
INFO  03:07:15,588 - #7 )
INFO  03:07:15,588 - #3 {
INFO  03:07:15,588 - #15 this
INFO  03:07:15,588 - #32 .
INFO  03:07:15,588 - #15 factor
INFO  03:07:15,588 - #12 =
INFO  03:07:15,588 - #15 factor
INFO  03:07:15,588 - #5 ;
INFO  03:07:15,589 - #4 }
INFO  03:07:15,589 - #13 void
INFO  03:07:15,589 - #15 putp
INFO  03:07:15,589 - #6 (
INFO  03:07:15,589 - #15 int
INFO  03:07:15,589 - #15 a
INFO  03:07:15,589 - #8 ,
INFO  03:07:15,589 - #15 int
INFO  03:07:15,589 - #15 idx
INFO  03:07:15,589 - #7 )
INFO  03:07:15,589 - #3 {
INFO  03:07:15,589 - #15 this
INFO  03:07:15,589 - #32 .
INFO  03:07:15,589 - #15 pos
INFO  03:07:15,589 - #31 [
INFO  03:07:15,589 - #15 idx
INFO  03:07:15,589 - #30 ]
INFO  03:07:15,589 - #12 =
INFO  03:07:15,589 - #15 a
INFO  03:07:15,590 - #5 ;
INFO  03:07:15,590 - #4 }
INFO  03:07:15,590 - #13 void
INFO  03:07:15,590 - #15 putn
INFO  03:07:15,590 - #6 (
INFO  03:07:15,590 - #15 int
INFO  03:07:15,590 - #15 a
INFO  03:07:15,590 - #8 ,
INFO  03:07:15,590 - #15 int
INFO  03:07:15,590 - #15 idx
INFO  03:07:15,590 - #7 )
INFO  03:07:15,590 - #3 {
INFO  03:07:15,590 - #15 this
INFO  03:07:15,590 - #32 .
INFO  03:07:15,590 - #15 neg
INFO  03:07:15,590 - #31 [
INFO  03:07:15,590 - #15 idx
INFO  03:07:15,591 - #30 ]
INFO  03:07:15,591 - #12 =
INFO  03:07:15,591 - #15 a
INFO  03:07:15,591 - #5 ;
INFO  03:07:15,591 - #4 }
INFO  03:07:15,591 - #15 int
INFO  03:07:15,591 - #15 getp
INFO  03:07:15,591 - #6 (
INFO  03:07:15,591 - #15 int
INFO  03:07:15,591 - #15 idx
INFO  03:07:15,591 - #7 )
INFO  03:07:15,591 - #3 {
INFO  03:07:15,591 - #10 return
INFO  03:07:15,591 - #15 pos
INFO  03:07:15,592 - #31 [
INFO  03:07:15,592 - #15 idx
INFO  03:07:15,592 - #30 ]
INFO  03:07:15,592 - #5 ;
INFO  03:07:15,592 - #4 }
INFO  03:07:15,592 - #15 int
INFO  03:07:15,592 - #15 getn
INFO  03:07:15,592 - #6 (
INFO  03:07:15,592 - #15 int
INFO  03:07:15,592 - #15 idx
INFO  03:07:15,592 - #7 )
INFO  03:07:15,592 - #3 {
INFO  03:07:15,592 - #10 return
INFO  03:07:15,592 - #15 neg
INFO  03:07:15,592 - #31 [
INFO  03:07:15,592 - #15 idx
INFO  03:07:15,592 - #30 ]
INFO  03:07:15,592 - #5 ;
INFO  03:07:15,592 - #4 }
INFO  03:07:15,592 - #4 }
INFO  03:07:15,592 - #4 }
INFO  03:07:15,592 - #15 Table
INFO  03:07:15,592 - #15 val
INFO  03:07:15,592 - #5 ;
INFO  03:07:15,592 - #15 Int
INFO  03:07:15,592 - #15 rows
INFO  03:07:15,592 - #8 ,
INFO  03:07:15,592 - #15 columns
INFO  03:07:15,592 - #5 ;
INFO  03:07:15,593 - #3 {
INFO  03:07:15,593 - #13 void
INFO  03:07:15,593 - #15 f
INFO  03:07:15,593 - #6 (
INFO  03:07:15,593 - #15 char
INFO  03:07:15,593 - #15 ch
INFO  03:07:15,593 - #8 ,
INFO  03:07:15,593 - #15 int
INFO  03:07:15,593 - #15 a
INFO  03:07:15,594 - #8 ,
INFO  03:07:15,594 - #15 int
INFO  03:07:15,594 - #15 arg
INFO  03:07:15,594 - #7 )
INFO  03:07:15,594 - #15 int
INFO  03:07:15,594 - #15 x
INFO  03:07:15,594 - #5 ;
INFO  03:07:15,594 - #3 {
INFO  03:07:15,594 - #15 x
INFO  03:07:15,594 - #12 =
INFO  03:07:15,594 - #15 arg
INFO  03:07:15,594 - #5 ;
INFO  03:07:15,594 - #4 }
INFO  03:07:15,594 - #13 void
INFO  03:07:15,594 - #15 main
INFO  03:07:15,595 - #6 (
INFO  03:07:15,595 - #7 )
INFO  03:07:15,595 - #15 int
INFO  03:07:15,595 - #15 x
INFO  03:07:15,595 - #8 ,
INFO  03:07:15,595 - #15 i
INFO  03:07:15,595 - #5 ;
INFO  03:07:15,595 - #15 char
INFO  03:07:15,595 - #15 c
INFO  03:07:15,595 - #8 ,
INFO  03:07:15,595 - #15 int
INFO  03:07:15,595 - #15 arr
INFO  03:07:15,595 - #31 [
INFO  03:07:15,595 - #30 ]
INFO  03:07:15,595 - #5 ;
INFO  03:07:15,595 - #3 {
INFO  03:07:15,596 - #15 val
INFO  03:07:15,596 - #12 =
INFO  03:07:15,596 - #19 new
INFO  03:07:15,596 - #15 Table
INFO  03:07:15,596 - #6 (
INFO  03:07:15,596 - #14 2
INFO  03:07:15,596 - #7 )
INFO  03:07:15,596 - #5 ;
INFO  03:07:15,596 - #15 arr
INFO  03:07:15,596 - #12 =
INFO  03:07:15,597 - #19 new
INFO  03:07:15,597 - #15 int
INFO  03:07:15,597 - #31 [
INFO  03:07:15,597 - #14 3
INFO  03:07:15,598 - #30 ]
INFO  03:07:15,598 - #5 ;
INFO  03:07:15,598 - #15 i
INFO  03:07:15,598 - #12 =
INFO  03:07:15,598 - #14 0
INFO  03:07:15,598 - #5 ;
INFO  03:07:15,598 - #20 while
INFO  03:07:15,598 - #6 (
INFO  03:07:15,598 - #15 i
INFO  03:07:15,598 - #39 <
INFO  03:07:15,598 - #14 3
INFO  03:07:15,598 - #7 )
INFO  03:07:15,598 - #3 {
INFO  03:07:15,598 - #15 arr
INFO  03:07:15,598 - #31 [
INFO  03:07:15,598 - #15 i
INFO  03:07:15,598 - #30 ]
INFO  03:07:15,598 - #12 =
INFO  03:07:15,598 - #15 i
INFO  03:07:15,598 - #5 ;
INFO  03:07:15,598 - #15 i
INFO  03:07:15,598 - #34 ++
INFO  03:07:15,598 - #5 ;
INFO  03:07:15,598 - #4 }
INFO  03:07:15,598 - #15 arr
INFO  03:07:15,598 - #32 .
INFO  03:07:15,599 - #23 foreach
INFO  03:07:15,599 - #6 (
INFO  03:07:15,599 - #15 x
INFO  03:07:15,599 - #29 =>
INFO  03:07:15,599 - #9 print
INFO  03:07:15,599 - #6 (
INFO  03:07:15,599 - #15 x
INFO  03:07:15,599 - #7 )
INFO  03:07:15,599 - #5 ;
INFO  03:07:15,599 - #7 )
INFO  03:07:15,599 - #5 ;
INFO  03:07:15,599 - #15 val
INFO  03:07:15,599 - #32 .
INFO  03:07:15,599 - #15 pos
INFO  03:07:15,599 - #12 =
INFO  03:07:15,599 - #19 new
INFO  03:07:15,599 - #15 int
INFO  03:07:15,599 - #31 [
INFO  03:07:15,599 - #15 size
INFO  03:07:15,599 - #30 ]
INFO  03:07:15,599 - #5 ;
INFO  03:07:15,599 - #15 val
INFO  03:07:15,599 - #32 .
INFO  03:07:15,599 - #15 neg
INFO  03:07:15,599 - #12 =
INFO  03:07:15,599 - #19 new
INFO  03:07:15,599 - #15 int
INFO  03:07:15,599 - #31 [
INFO  03:07:15,599 - #15 size
INFO  03:07:15,599 - #30 ]
INFO  03:07:15,599 - #5 ;
INFO  03:07:15,600 - #18 read
INFO  03:07:15,600 - #6 (
INFO  03:07:15,600 - #15 x
INFO  03:07:15,600 - #7 )
INFO  03:07:15,600 - #5 ;
INFO  03:07:15,600 - #31 [
INFO  03:07:15,600 - #15 i
INFO  03:07:15,600 - #8 ,
INFO  03:07:15,600 - #8 ,
INFO  03:07:15,600 - #15 x
INFO  03:07:15,600 - #30 ]
INFO  03:07:15,600 - #12 =
INFO  03:07:15,600 - #15 arr
INFO  03:07:15,600 - #5 ;
INFO  03:07:15,600 - #20 while
INFO  03:07:15,600 - #6 (
INFO  03:07:15,600 - #15 i
INFO  03:07:15,600 - #39 <
INFO  03:07:15,600 - #15 size
INFO  03:07:15,600 - #7 )
INFO  03:07:15,600 - #3 {
INFO  03:07:15,600 - #15 val
INFO  03:07:15,600 - #32 .
INFO  03:07:15,600 - #15 putp
INFO  03:07:15,600 - #6 (
INFO  03:07:15,600 - #14 0
INFO  03:07:15,600 - #8 ,
INFO  03:07:15,600 - #15 i
INFO  03:07:15,600 - #7 )
INFO  03:07:15,600 - #5 ;
INFO  03:07:15,600 - #15 val
INFO  03:07:15,600 - #32 .
INFO  03:07:15,600 - #15 putn
INFO  03:07:15,600 - #6 (
INFO  03:07:15,601 - #14 0
INFO  03:07:15,601 - #8 ,
INFO  03:07:15,601 - #15 i
INFO  03:07:15,601 - #7 )
INFO  03:07:15,601 - #5 ;
INFO  03:07:15,601 - #15 i
INFO  03:07:15,601 - #34 ++
INFO  03:07:15,601 - #5 ;
INFO  03:07:15,601 - #4 }
INFO  03:07:15,601 - #15 f
INFO  03:07:15,601 - #6 (
INFO  03:07:15,601 - #15 c
INFO  03:07:15,601 - #8 ,
INFO  03:07:15,601 - #15 x
INFO  03:07:15,601 - #8 ,
INFO  03:07:15,601 - #15 i
INFO  03:07:15,601 - #7 )
INFO  03:07:15,601 - #5 ;
INFO  03:07:15,601 - #18 read
INFO  03:07:15,601 - #6 (
INFO  03:07:15,601 - #15 rows
INFO  03:07:15,601 - #7 )
INFO  03:07:15,601 - #5 ;
INFO  03:07:15,601 - #15 x
INFO  03:07:15,601 - #12 =
INFO  03:07:15,601 - #15 rows
INFO  03:07:15,601 - #5 ;
INFO  03:07:15,601 - #20 while
INFO  03:07:15,601 - #6 (
INFO  03:07:15,601 - #27 true
INFO  03:07:15,602 - #7 )
INFO  03:07:15,602 - #3 {
INFO  03:07:15,602 - #16 if
INFO  03:07:15,602 - #6 (
INFO  03:07:15,602 - #15 x
INFO  03:07:15,602 - #38 <=
INFO  03:07:15,602 - #14 0
INFO  03:07:15,602 - #7 )
INFO  03:07:15,602 - #26 break
INFO  03:07:15,602 - #5 ;
INFO  03:07:15,602 - #16 if
INFO  03:07:15,602 - #6 (
INFO  03:07:15,602 - #14 0
INFO  03:07:15,602 - #38 <=
INFO  03:07:15,602 - #15 x
INFO  03:07:15,602 - #37 &&
INFO  03:07:15,602 - #15 x
INFO  03:07:15,602 - #39 <
INFO  03:07:15,602 - #15 size
INFO  03:07:15,602 - #7 )
INFO  03:07:15,602 - #3 {
INFO  03:07:15,602 - #4 }
INFO  03:07:15,602 - #17 else
INFO  03:07:15,602 - #16 if
INFO  03:07:15,602 - #6 (
INFO  03:07:15,603 - #15 size
INFO  03:07:15,603 - #39 <
INFO  03:07:15,603 - #15 x
INFO  03:07:15,603 - #37 &&
INFO  03:07:15,603 - #15 x
INFO  03:07:15,603 - #39 <
INFO  03:07:15,603 - #14 0
INFO  03:07:15,603 - #7 )
INFO  03:07:15,603 - #3 {
INFO  03:07:15,603 - #4 }
INFO  03:07:15,603 - #18 read
INFO  03:07:15,603 - #6 (
INFO  03:07:15,603 - #15 x
INFO  03:07:15,603 - #7 )
INFO  03:07:15,603 - #5 ;
INFO  03:07:15,603 - #4 }
INFO  03:07:15,603 - #4 }
INFO  03:07:15,603 - #4 }
