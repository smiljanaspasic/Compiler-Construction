INFO  01:24:16,749 - Compiling source file: C:\PP1 domaci\workspace\MJCompiler\test\program.mj
INFO  01:24:16,793 - #2 program
INFO  01:24:16,793 - #17 nekiprogram
INFO  01:24:16,793 - #26 const
INFO  01:24:16,794 - #17 bool
INFO  01:24:16,794 - #17 c
INFO  01:24:16,795 - #12 =
INFO  01:24:16,795 - #14 false
INFO  01:24:16,796 - #8 ,
INFO  01:24:16,796 - #17 d
INFO  01:24:16,796 - #12 =
INFO  01:24:16,796 - #14 true
INFO  01:24:16,796 - #5 ;
INFO  01:24:16,796 - #17 int
INFO  01:24:16,797 - #17 g
INFO  01:24:16,797 - #32 [
INFO  01:24:16,797 - #31 ]
INFO  01:24:16,797 - #5 ;
INFO  01:24:16,799 - #17 int
INFO  01:24:16,799 - #17 m
INFO  01:24:16,799 - #5 ;
INFO  01:24:16,800 - #17 bool
INFO  01:24:16,800 - #17 kk
INFO  01:24:16,801 - #5 ;
INFO  01:24:16,801 - #26 const
INFO  01:24:16,801 - #17 char
INFO  01:24:16,802 - #17 character
INFO  01:24:16,802 - #12 =
INFO  01:24:16,802 - #15 s
INFO  01:24:16,802 - #5 ;
INFO  01:24:16,802 - #3 {
INFO  01:24:16,802 - #13 void
INFO  01:24:16,803 - #17 main
INFO  01:24:16,803 - #6 (
INFO  01:24:16,803 - #7 )
INFO  01:24:16,804 - #3 {
INFO  01:24:16,805 - #4 }
INFO  01:24:16,805 - #13 void
INFO  01:24:16,806 - #17 fun
INFO  01:24:16,806 - #6 (
INFO  01:24:16,806 - #7 )
INFO  01:24:16,806 - #17 int
INFO  01:24:16,806 - #17 i
INFO  01:24:16,807 - #32 [
INFO  01:24:16,807 - #31 ]
INFO  01:24:16,807 - #5 ;
INFO  01:24:16,807 - #3 {
INFO  01:24:16,807 - #4 }
INFO  01:24:16,807 - #13 void
INFO  01:24:16,807 - #17 fun2
INFO  01:24:16,807 - #6 (
INFO  01:24:16,807 - #17 int
INFO  01:24:16,807 - #17 a
INFO  01:24:16,808 - #8 ,
INFO  01:24:16,808 - #17 char
INFO  01:24:16,809 - #17 b
INFO  01:24:16,809 - #32 [
INFO  01:24:16,809 - #31 ]
INFO  01:24:16,809 - #7 )
INFO  01:24:16,809 - #3 {
INFO  01:24:16,809 - #4 }
INFO  01:24:16,809 - #17 int
INFO  01:24:16,809 - #17 fun3
INFO  01:24:16,809 - #6 (
INFO  01:24:16,809 - #17 int
INFO  01:24:16,810 - #17 ca
INFO  01:24:16,810 - #8 ,
INFO  01:24:16,810 - #17 int
INFO  01:24:16,810 - #17 ba
INFO  01:24:16,810 - #8 ,
INFO  01:24:16,810 - #17 char
INFO  01:24:16,810 - #17 d
INFO  01:24:16,810 - #7 )
INFO  01:24:16,810 - #3 {
INFO  01:24:16,810 - #17 ca
INFO  01:24:16,810 - #35 ++
INFO  01:24:16,810 - #5 ;
INFO  01:24:16,811 - #17 ba
INFO  01:24:16,811 - #36 --
INFO  01:24:16,811 - #5 ;
INFO  01:24:16,811 - #20 read
INFO  01:24:16,811 - #6 (
INFO  01:24:16,811 - #17 d
INFO  01:24:16,811 - #7 )
INFO  01:24:16,811 - #5 ;
INFO  01:24:16,811 - #4 }
INFO  01:24:16,812 - #17 int
INFO  01:24:16,812 - #17 fun4
INFO  01:24:16,812 - #6 (
INFO  01:24:16,812 - #17 int
INFO  01:24:16,812 - #17 ab
INFO  01:24:16,812 - #32 [
INFO  01:24:16,812 - #31 ]
INFO  01:24:16,812 - #8 ,
INFO  01:24:16,812 - #17 char
INFO  01:24:16,812 - #17 bb
INFO  01:24:16,812 - #8 ,
INFO  01:24:16,812 - #17 bool
INFO  01:24:16,812 - #17 cb
INFO  01:24:16,812 - #7 )
INFO  01:24:16,813 - #17 int
INFO  01:24:16,813 - #17 p
INFO  01:24:16,813 - #5 ;
INFO  01:24:16,813 - #3 {
INFO  01:24:16,813 - #17 kk
INFO  01:24:16,813 - #12 =
INFO  01:24:16,813 - #17 m
INFO  01:24:16,813 - #33 .
INFO  01:24:16,813 - #29 findAny
INFO  01:24:16,813 - #6 (
INFO  01:24:16,813 - #16 4
INFO  01:24:16,814 - #7 )
INFO  01:24:16,814 - #5 ;
INFO  01:24:16,814 - #17 ab
INFO  01:24:16,814 - #12 =
INFO  01:24:16,814 - #48 -
INFO  01:24:16,814 - #16 5
INFO  01:24:16,814 - #5 ;
INFO  01:24:16,814 - #17 bb
INFO  01:24:16,815 - #12 =
INFO  01:24:16,815 - #15 c
INFO  01:24:16,815 - #5 ;
INFO  01:24:16,815 - #17 ab
INFO  01:24:16,815 - #12 =
INFO  01:24:16,815 - #6 (
INFO  01:24:16,815 - #48 -
INFO  01:24:16,815 - #16 2
INFO  01:24:16,815 - #47 *
INFO  01:24:16,815 - #16 8
INFO  01:24:16,817 - #47 *
INFO  01:24:16,817 - #16 4
INFO  01:24:16,817 - #7 )
INFO  01:24:16,817 - #5 ;
INFO  01:24:16,817 - #17 cb
INFO  01:24:16,817 - #12 =
INFO  01:24:16,817 - #14 true
INFO  01:24:16,817 - #5 ;
INFO  01:24:16,818 - #17 ab
INFO  01:24:16,818 - #12 =
INFO  01:24:16,818 - #21 new
INFO  01:24:16,818 - #17 int
INFO  01:24:16,818 - #32 [
INFO  01:24:16,818 - #16 12
INFO  01:24:16,818 - #48 -
INFO  01:24:16,818 - #16 2
INFO  01:24:16,819 - #31 ]
INFO  01:24:16,819 - #5 ;
INFO  01:24:16,819 - #17 g
INFO  01:24:16,819 - #32 [
INFO  01:24:16,819 - #16 4
INFO  01:24:16,819 - #46 /
INFO  01:24:16,819 - #16 2
INFO  01:24:16,820 - #45 %
INFO  01:24:16,821 - #16 9
INFO  01:24:16,821 - #31 ]
INFO  01:24:16,821 - #12 =
INFO  01:24:16,822 - #16 6
INFO  01:24:16,822 - #5 ;
INFO  01:24:16,822 - #4 }
INFO  01:24:16,822 - #17 char
INFO  01:24:16,822 - #17 fun5
INFO  01:24:16,822 - #6 (
INFO  01:24:16,822 - #7 )
INFO  01:24:16,822 - #3 {
INFO  01:24:16,822 - #9 print
INFO  01:24:16,825 - #6 (
INFO  01:24:16,825 - #16 6
INFO  01:24:16,825 - #7 )
INFO  01:24:16,826 - #5 ;
INFO  01:24:16,826 - #9 print
INFO  01:24:16,826 - #6 (
INFO  01:24:16,826 - #15 6
INFO  01:24:16,826 - #8 ,
INFO  01:24:16,826 - #16 7
INFO  01:24:16,827 - #7 )
INFO  01:24:16,827 - #5 ;
INFO  01:24:16,827 - #4 }
INFO  01:24:16,827 - #4 }
INFO  01:24:16,829 - Program(
  ProgName(
   nekiprogram
  ) [ProgName]
  DeclListConst(
    DeclListVar(
      DeclListVar(
        DeclListVar(
          DeclListConst(
            NoDeclList(
            ) [NoDeclList]
            ConstsDeclNext(
              Type(
               bool
              ) [Type]
              MultipleConstList(
                OneConstList(
                  BoolConstDecl(
                   c
                   false
                  ) [BoolConstDecl]
                ) [OneConstList]
                BoolConstDecl(
                 d
                 true
                ) [BoolConstDecl]
              ) [MultipleConstList]
            ) [ConstsDeclNext]
          ) [DeclListConst]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarList(
              VarAssign(
               g
                SqrBrackets(
                ) [SqrBrackets]
              ) [VarAssign]
            ) [OneVarList]
          ) [VarDeclaration]
        ) [DeclListVar]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarList(
            VarAssign(
             m
              NoSqrBrackets(
              ) [NoSqrBrackets]
            ) [VarAssign]
          ) [OneVarList]
        ) [VarDeclaration]
      ) [DeclListVar]
      VarDeclaration(
        Type(
         bool
        ) [Type]
        OneVarList(
          VarAssign(
           kk
            NoSqrBrackets(
            ) [NoSqrBrackets]
          ) [VarAssign]
        ) [OneVarList]
      ) [VarDeclaration]
    ) [DeclListVar]
    ConstsDeclNext(
      Type(
       char
      ) [Type]
      OneConstList(
        CharConstDecl(
         character
         s
        ) [CharConstDecl]
      ) [OneConstList]
    ) [ConstsDeclNext]
  ) [DeclListConst]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          MethodDeclarations(
            MethodDeclarations(
              NoMethodDecl(
              ) [NoMethodDecl]
              MethodDecl(
                VoidType(
                 main
                ) [VoidType]
                NoFormPars(
                ) [NoFormPars]
                NoVarDec(
                ) [NoVarDec]
                NoStatementDecl(
                ) [NoStatementDecl]
              ) [MethodDecl]
            ) [MethodDeclarations]
            MethodDecl(
              VoidType(
               fun
              ) [VoidType]
              NoFormPars(
              ) [NoFormPars]
              YesVarDecMul(
                NoVarDec(
                ) [NoVarDec]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  OneVarList(
                    VarAssign(
                     i
                      SqrBrackets(
                      ) [SqrBrackets]
                    ) [VarAssign]
                  ) [OneVarList]
                ) [VarDeclaration]
              ) [YesVarDecMul]
              NoStatementDecl(
              ) [NoStatementDecl]
            ) [MethodDecl]
          ) [MethodDeclarations]
          MethodDecl(
            VoidType(
             fun2
            ) [VoidType]
            FormParsDeclMul(
              FormParsDecOne(
                FormAssign(
                  Type(
                   int
                  ) [Type]
                 a
                  NoSqrBrackets(
                  ) [NoSqrBrackets]
                ) [FormAssign]
              ) [FormParsDecOne]
              FormAssign(
                Type(
                 char
                ) [Type]
               b
                SqrBrackets(
                ) [SqrBrackets]
              ) [FormAssign]
            ) [FormParsDeclMul]
            NoVarDec(
            ) [NoVarDec]
            NoStatementDecl(
            ) [NoStatementDecl]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          NonVoidType(
            Type(
             int
            ) [Type]
           fun3
          ) [NonVoidType]
          FormParsDeclMul(
            FormParsDeclMul(
              FormParsDecOne(
                FormAssign(
                  Type(
                   int
                  ) [Type]
                 ca
                  NoSqrBrackets(
                  ) [NoSqrBrackets]
                ) [FormAssign]
              ) [FormParsDecOne]
              FormAssign(
                Type(
                 int
                ) [Type]
               ba
                NoSqrBrackets(
                ) [NoSqrBrackets]
              ) [FormAssign]
            ) [FormParsDeclMul]
            FormAssign(
              Type(
               char
              ) [Type]
             d
              NoSqrBrackets(
              ) [NoSqrBrackets]
            ) [FormAssign]
          ) [FormParsDeclMul]
          NoVarDec(
          ) [NoVarDec]
          StatementDeclListt(
            StatementDeclListt(
              StatementDeclListt(
                NoStatementDecl(
                ) [NoStatementDecl]
                DesignatorStmt(
                  IncDesignatorStmt(
                    DesignatorNoExpr(
                     ca
                    ) [DesignatorNoExpr]
                  ) [IncDesignatorStmt]
                ) [DesignatorStmt]
              ) [StatementDeclListt]
              DesignatorStmt(
                DecDesignatorStmt(
                  DesignatorNoExpr(
                   ba
                  ) [DesignatorNoExpr]
                ) [DecDesignatorStmt]
              ) [DesignatorStmt]
            ) [StatementDeclListt]
            ReadStmt(
              DesignatorNoExpr(
               d
              ) [DesignatorNoExpr]
            ) [ReadStmt]
          ) [StatementDeclListt]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        NonVoidType(
          Type(
           int
          ) [Type]
         fun4
        ) [NonVoidType]
        FormParsDeclMul(
          FormParsDeclMul(
            FormParsDecOne(
              FormAssign(
                Type(
                 int
                ) [Type]
               ab
                SqrBrackets(
                ) [SqrBrackets]
              ) [FormAssign]
            ) [FormParsDecOne]
            FormAssign(
              Type(
               char
              ) [Type]
             bb
              NoSqrBrackets(
              ) [NoSqrBrackets]
            ) [FormAssign]
          ) [FormParsDeclMul]
          FormAssign(
            Type(
             bool
            ) [Type]
           cb
            NoSqrBrackets(
            ) [NoSqrBrackets]
          ) [FormAssign]
        ) [FormParsDeclMul]
        YesVarDecMul(
          NoVarDec(
          ) [NoVarDec]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarList(
              VarAssign(
               p
                NoSqrBrackets(
                ) [NoSqrBrackets]
              ) [VarAssign]
            ) [OneVarList]
          ) [VarDeclaration]
        ) [YesVarDecMul]
        StatementDeclListt(
          StatementDeclListt(
            StatementDeclListt(
              StatementDeclListt(
                StatementDeclListt(
                  StatementDeclListt(
                    StatementDeclListt(
                      NoStatementDecl(
                      ) [NoStatementDecl]
                      FindStmt(
                        DesignatorNoExpr(
                         kk
                        ) [DesignatorNoExpr]
                        DesignatorNoExpr(
                         m
                        ) [DesignatorNoExpr]
                        ExprSingleTerm(
                          TermSingleFactor(
                            NumFactor(
                             4
                            ) [NumFactor]
                          ) [TermSingleFactor]
                        ) [ExprSingleTerm]
                      ) [FindStmt]
                    ) [StatementDeclListt]
                    DesignatorStmt(
                      ExprDesignatorStmt(
                        DesignatorNoExpr(
                         ab
                        ) [DesignatorNoExpr]
                        ExprMinus(
                          TermSingleFactor(
                            NumFactor(
                             5
                            ) [NumFactor]
                          ) [TermSingleFactor]
                        ) [ExprMinus]
                      ) [ExprDesignatorStmt]
                    ) [DesignatorStmt]
                  ) [StatementDeclListt]
                  DesignatorStmt(
                    ExprDesignatorStmt(
                      DesignatorNoExpr(
                       bb
                      ) [DesignatorNoExpr]
                      ExprSingleTerm(
                        TermSingleFactor(
                          CharFactor(
                           c
                          ) [CharFactor]
                        ) [TermSingleFactor]
                      ) [ExprSingleTerm]
                    ) [ExprDesignatorStmt]
                  ) [DesignatorStmt]
                ) [StatementDeclListt]
                DesignatorStmt(
                  ExprDesignatorStmt(
                    DesignatorNoExpr(
                     ab
                    ) [DesignatorNoExpr]
                    ExprSingleTerm(
                      TermSingleFactor(
                        ExprFactor(
                          ExprMinus(
                            TermMulop(
                              TermMulop(
                                TermSingleFactor(
                                  NumFactor(
                                   2
                                  ) [NumFactor]
                                ) [TermSingleFactor]
                                MulopMul(
                                ) [MulopMul]
                                NumFactor(
                                 8
                                ) [NumFactor]
                              ) [TermMulop]
                              MulopMul(
                              ) [MulopMul]
                              NumFactor(
                               4
                              ) [NumFactor]
                            ) [TermMulop]
                          ) [ExprMinus]
                        ) [ExprFactor]
                      ) [TermSingleFactor]
                    ) [ExprSingleTerm]
                  ) [ExprDesignatorStmt]
                ) [DesignatorStmt]
              ) [StatementDeclListt]
              DesignatorStmt(
                ExprDesignatorStmt(
                  DesignatorNoExpr(
                   cb
                  ) [DesignatorNoExpr]
                  ExprSingleTerm(
                    TermSingleFactor(
                      BoolFactor(
                       true
                      ) [BoolFactor]
                    ) [TermSingleFactor]
                  ) [ExprSingleTerm]
                ) [ExprDesignatorStmt]
              ) [DesignatorStmt]
            ) [StatementDeclListt]
            DesignatorStmt(
              ExprDesignatorStmt(
                DesignatorNoExpr(
                 ab
                ) [DesignatorNoExpr]
                ExprSingleTerm(
                  TermSingleFactor(
                    NewFactor(
                      Type(
                       int
                      ) [Type]
                      ExprSingleTerm(
                        TermMulop(
                          TermSingleFactor(
                            NumFactor(
                             12
                            ) [NumFactor]
                          ) [TermSingleFactor]
                          MulopMinus(
                          ) [MulopMinus]
                          NumFactor(
                           2
                          ) [NumFactor]
                        ) [TermMulop]
                      ) [ExprSingleTerm]
                    ) [NewFactor]
                  ) [TermSingleFactor]
                ) [ExprSingleTerm]
              ) [ExprDesignatorStmt]
            ) [DesignatorStmt]
          ) [StatementDeclListt]
          DesignatorStmt(
            ExprDesignatorStmt(
              DesignatorDecl(
               g
                ExprAddop(
                  ExprAddop(
                    ExprSingleTerm(
                      TermSingleFactor(
                        NumFactor(
                         4
                        ) [NumFactor]
                      ) [TermSingleFactor]
                    ) [ExprSingleTerm]
                    AddopDiv(
                    ) [AddopDiv]
                    TermSingleFactor(
                      NumFactor(
                       2
                      ) [NumFactor]
                    ) [TermSingleFactor]
                  ) [ExprAddop]
                  AddopMod(
                  ) [AddopMod]
                  TermSingleFactor(
                    NumFactor(
                     9
                    ) [NumFactor]
                  ) [TermSingleFactor]
                ) [ExprAddop]
              ) [DesignatorDecl]
              ExprSingleTerm(
                TermSingleFactor(
                  NumFactor(
                   6
                  ) [NumFactor]
                ) [TermSingleFactor]
              ) [ExprSingleTerm]
            ) [ExprDesignatorStmt]
          ) [DesignatorStmt]
        ) [StatementDeclListt]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      NonVoidType(
        Type(
         char
        ) [Type]
       fun5
      ) [NonVoidType]
      NoFormPars(
      ) [NoFormPars]
      NoVarDec(
      ) [NoVarDec]
      StatementDeclListt(
        StatementDeclListt(
          NoStatementDecl(
          ) [NoStatementDecl]
          PrintStmt(
            ExprSingleTerm(
              TermSingleFactor(
                NumFactor(
                 6
                ) [NumFactor]
              ) [TermSingleFactor]
            ) [ExprSingleTerm]
            NoNumConstt(
            ) [NoNumConstt]
          ) [PrintStmt]
        ) [StatementDeclListt]
        PrintStmt(
          ExprSingleTerm(
            TermSingleFactor(
              CharFactor(
               6
              ) [CharFactor]
            ) [TermSingleFactor]
          ) [ExprSingleTerm]
          NumConstt(
           7
          ) [NumConstt]
        ) [PrintStmt]
      ) [StatementDeclListt]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  01:24:16,830 - ===================================
INFO  01:24:16,837 - Nadjena logicka(bool) konstanta c na liniji 2
INFO  01:24:16,837 - Nadjena logicka(bool) konstanta d na liniji 2
INFO  01:24:16,837 - Nadjena varijabla g na liniji 3
INFO  01:24:16,837 - Nadjena varijabla m na liniji 4
INFO  01:24:16,837 - Nadjena varijabla kk na liniji 5
INFO  01:24:16,838 - Nadjena karakterna(char) konstanta character na liniji 6
INFO  01:24:16,838 - Nadjena funkcija main na liniji 9
INFO  01:24:16,838 - Nadjena funkcija fun na liniji 11
INFO  01:24:16,838 - Nadjena varijabla i na liniji 11
INFO  01:24:16,838 - Nadjena funkcija fun2 na liniji 13
INFO  01:24:16,838 - Nadjena lokalna varijabla a na liniji 13
INFO  01:24:16,838 - Nadjena lokalna varijabla b na liniji 13
INFO  01:24:16,838 - Nadjena funkcija fun3 na liniji 15
INFO  01:24:16,838 - Nadjena lokalna varijabla ca na liniji 15
INFO  01:24:16,838 - Nadjena lokalna varijabla ba na liniji 15
INFO  01:24:16,838 - Nadjena lokalna varijabla d na liniji 15
INFO  01:24:16,838 - Nadjena funkcija fun4 na liniji 17
INFO  01:24:16,839 - Nadjena lokalna varijabla ab na liniji 17
INFO  01:24:16,839 - Nadjena lokalna varijabla bb na liniji 17
INFO  01:24:16,839 - Nadjena lokalna varijabla cb na liniji 17
INFO  01:24:16,839 - Nadjena varijabla p na liniji 17
ERROR 01:24:16,839 - Tip Expr-a nije kopatibila pri dodeli sa tipom Designator-a na liniji 24
INFO  01:24:16,839 - Nadjena funkcija fun5 na liniji 27
INFO  01:24:16,839 -  Deklarisanih promenljivih ima = 5
