INFO  15:31:50,653 - Compiling source file: C:\PP1 domaci\workspace\MJCompiler\test\program.mj
INFO  15:31:50,669 - #2 program
INFO  15:31:50,670 - #15 nekiprogram
INFO  15:31:50,670 - #24 const
INFO  15:31:50,670 - #15 bool
INFO  15:31:50,670 - #15 c
INFO  15:31:50,671 - #12 =
INFO  15:31:50,671 - #27 false
INFO  15:31:50,671 - #8 ,
INFO  15:31:50,672 - #15 d
INFO  15:31:50,672 - #12 =
INFO  15:31:50,672 - #27 true
INFO  15:31:50,672 - #5 ;
INFO  15:31:50,672 - #15 int
INFO  15:31:50,672 - #15 g
INFO  15:31:50,672 - #31 [
INFO  15:31:50,672 - #30 ]
INFO  15:31:50,672 - #5 ;
INFO  15:31:50,673 - #24 const
INFO  15:31:50,674 - #15 char
INFO  15:31:50,674 - #15 character
INFO  15:31:50,674 - #12 =
INFO  15:31:50,674 - #28 s
INFO  15:31:50,674 - #5 ;
INFO  15:31:50,674 - #3 {
INFO  15:31:50,674 - #15 int
INFO  15:31:50,675 - #15 main
INFO  15:31:50,675 - #6 (
INFO  15:31:50,675 - #7 )
INFO  15:31:50,675 - #3 {
INFO  15:31:50,676 - #4 }
INFO  15:31:50,676 - #13 void
INFO  15:31:50,676 - #15 fun
INFO  15:31:50,677 - #6 (
INFO  15:31:50,677 - #7 )
INFO  15:31:50,677 - #15 int
INFO  15:31:50,677 - #15 i
INFO  15:31:50,677 - #31 [
INFO  15:31:50,677 - #30 ]
INFO  15:31:50,677 - #5 ;
INFO  15:31:50,677 - #3 {
INFO  15:31:50,677 - #4 }
INFO  15:31:50,677 - #13 void
INFO  15:31:50,677 - #15 fun2
INFO  15:31:50,677 - #6 (
INFO  15:31:50,677 - #15 int
INFO  15:31:50,677 - #15 a
INFO  15:31:50,677 - #8 ,
INFO  15:31:50,678 - #15 char
INFO  15:31:50,678 - #15 b
INFO  15:31:50,678 - #31 [
INFO  15:31:50,678 - #30 ]
INFO  15:31:50,678 - #7 )
INFO  15:31:50,678 - #3 {
INFO  15:31:50,678 - #4 }
INFO  15:31:50,678 - #15 int
INFO  15:31:50,678 - #15 fun3
INFO  15:31:50,678 - #6 (
INFO  15:31:50,678 - #7 )
INFO  15:31:50,679 - #3 {
INFO  15:31:50,679 - #15 c
INFO  15:31:50,679 - #34 ++
INFO  15:31:50,679 - #5 ;
INFO  15:31:50,679 - #15 b
INFO  15:31:50,679 - #35 --
INFO  15:31:50,679 - #5 ;
INFO  15:31:50,679 - #18 read
INFO  15:31:50,679 - #6 (
INFO  15:31:50,679 - #15 d
INFO  15:31:50,680 - #7 )
INFO  15:31:50,680 - #5 ;
INFO  15:31:50,680 - #4 }
INFO  15:31:50,680 - #15 int
INFO  15:31:50,680 - #15 fun4
INFO  15:31:50,680 - #6 (
INFO  15:31:50,680 - #7 )
INFO  15:31:50,680 - #15 int
INFO  15:31:50,680 - #15 p
INFO  15:31:50,680 - #5 ;
INFO  15:31:50,680 - #3 {
INFO  15:31:50,680 - #31 [
INFO  15:31:50,680 - #15 b
INFO  15:31:50,680 - #8 ,
INFO  15:31:50,680 - #15 c
INFO  15:31:50,680 - #30 ]
INFO  15:31:50,680 - #12 =
INFO  15:31:50,680 - #15 a
INFO  15:31:50,681 - #5 ;
INFO  15:31:50,681 - #15 a
INFO  15:31:50,681 - #12 =
INFO  15:31:50,681 - #47 -
INFO  15:31:50,681 - #14 5
INFO  15:31:50,681 - #5 ;
INFO  15:31:50,683 - #15 a
INFO  15:31:50,683 - #12 =
INFO  15:31:50,683 - #28 c
INFO  15:31:50,683 - #5 ;
INFO  15:31:50,683 - #15 a
INFO  15:31:50,683 - #12 =
INFO  15:31:50,683 - #6 (
INFO  15:31:50,683 - #47 -
INFO  15:31:50,684 - #14 2
INFO  15:31:50,685 - #46 *
INFO  15:31:50,685 - #14 8
INFO  15:31:50,685 - #11 +
INFO  15:31:50,685 - #14 4
INFO  15:31:50,686 - #7 )
INFO  15:31:50,686 - #5 ;
INFO  15:31:50,686 - #15 a
INFO  15:31:50,686 - #12 =
INFO  15:31:50,686 - #27 true
INFO  15:31:50,686 - #5 ;
INFO  15:31:50,686 - #15 a
INFO  15:31:50,687 - #12 =
INFO  15:31:50,687 - #19 new
INFO  15:31:50,687 - #15 int
INFO  15:31:50,687 - #31 [
INFO  15:31:50,687 - #14 12
INFO  15:31:50,687 - #47 -
INFO  15:31:50,687 - #14 2
INFO  15:31:50,687 - #30 ]
INFO  15:31:50,687 - #5 ;
INFO  15:31:50,687 - #15 a
INFO  15:31:50,687 - #12 =
INFO  15:31:50,687 - #15 g
INFO  15:31:50,687 - #31 [
INFO  15:31:50,687 - #14 4
INFO  15:31:50,687 - #45 /
INFO  15:31:50,688 - #14 2
INFO  15:31:50,688 - #44 %
ERROR 15:31:50,688 - 
Sintaksna greska na liniji 17
ERROR 15:31:50,688 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 17
